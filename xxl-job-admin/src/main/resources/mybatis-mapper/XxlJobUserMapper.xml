<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxl.job.admin.dao.XxlJobUserDao">

	<resultMap id="XxlJobUser" type="com.xxl.job.admin.core.model.XxlJobUser" >
		<result column="id" property="id" />
		<result column="username" property="username" />
	    <result column="password" property="password" />
	    <result column="role" property="role" />
	    <result column="permission" property="permission" />
	</resultMap>

	<sql id="Base_Column_List">
		t.id,
		t.username,
		t.password,
		t.role,
		t.permission
	</sql>

	<select id="pageList" parameterType="java.util.HashMap" resultMap="XxlJobUser">
		SELECT *  from (
			SELECT t1.*,rownum rn FROM (
				SELECT <include refid="Base_Column_List" />
				FROM xxl_job_user t
				<trim prefix="WHERE" prefixOverrides="AND | OR" >
					<if test="username != null and username != ''">
						AND t.username like CONCAT(CONCAT('%', #{username}), '%')
					</if>
					<if test="role gt -1">
						AND t.role = #{role}
					</if>
				</trim>
				ORDER BY username ASC
			) t1
		)
		WHERE rn <![CDATA[ > ]]> ${offset} and rn <![CDATA[ <= ]]> ${offset}+#{pagesize}
	</select>

	<select id="pageListCount" parameterType="java.util.HashMap" resultType="int">
		SELECT count(1)
		FROM xxl_job_user t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="username != null and username != ''">
				AND t.username like CONCAT(CONCAT('%', #{username}), '%')
			</if>
			<if test="role gt -1">
				AND t.role = #{role}
			</if>
		</trim>
	</select>

	<select id="loadByUserName" parameterType="java.util.HashMap" resultMap="XxlJobUser">
		SELECT <include refid="Base_Column_List" />
		FROM xxl_job_user t
		WHERE t.username = #{username}
	</select>

	<insert id="save" parameterType="com.xxl.job.admin.core.model.XxlJobUser">
		<selectKey resultType="int" order="BEFORE" keyProperty="id">
			select XXL_JOB_USER_SEQ.nextval from dual
		</selectKey>
		INSERT INTO xxl_job_user (
			id,
			username,
			password,
			role,
			permission
		) VALUES (
			#{id},
			#{username, jdbcType=VARCHAR},
			#{password, jdbcType=VARCHAR},
			#{role, jdbcType=NUMERIC},
			#{permission, jdbcType=VARCHAR}
		)
	</insert>

	<update id="update" parameterType="com.xxl.job.admin.core.model.XxlJobUser" >
		UPDATE xxl_job_user
		SET
			<if test="password != null and password != ''">
				password = #{password, jdbcType=VARCHAR},
			</if>
			role = #{role, jdbcType=NUMERIC},
			permission = #{permission, jdbcType=VARCHAR}
		WHERE id = #{id}
	</update>

	<delete id="delete" parameterType="java.util.HashMap">
		DELETE
		FROM xxl_job_user
		WHERE id = #{id}
	</delete>

</mapper>